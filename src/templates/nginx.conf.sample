###################################################################################################
# Enable gzip
#
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 9;
gzip_min_length 50;
gzip_types
	text/css
	text/plain
	text/javascript
	application/javascript
	application/json
	application/x-javascript
	application/xml
	application/xml+rss
	application/xhtml+xml
	application/x-font-ttf
	application/x-font-opentype
	application/vnd.ms-fontobject
	image/svg+xml
	image/x-icon
	application/rss+xml
	application/atom_xml;

# Add debug information into header
set $gz_cache_debug 0;

###################################################################################################
# Defaults
#
set $gz_cache_bypass 1;               # Should NGINX bypass WordPress and call cache file directly?
set $gz_cache_encryption "";          # Is GZIP accepted by client?
set $gz_cache_file "";                # Filename to use
set $serving_static "No";          	  # Header text added to check if the bypass worked or not. Header: X-Cache-Serving-Static
set $gz_cache_reason "";              # Reason why cache file was not used. If cache file is used, what file was used
set $gz_cache_https_prefix "";        # HTTPS prefix to use when cached files are using HTTPS
set $gz_cache_hsts 0;                 # Is HSTS is off (0) by default. Will be turned on (1) if request is HTTPS

###################################################################################################
# HSTS Value
#
set $gz_cache_hsts_value "max-age=31536000; includeSubDomains";

###################################################################################################
# PAGE CACHE
#

# Is GZIP accepted by client?
if ($http_accept_encoding ~ gzip) {
    set $gz_cache_encryption "_gz";
}

# Is SSL request?
if ($https = "on") {
    set $gz_cache_https_prefix "-https";
    set $gz_cache_hsts 1;
}

# If HSTS is disabled, unset HSTS
if ($gz_cache_hsts = "0") {
    set $gz_cache_hsts_value "";
}

# File/URL to return if we must bypass WordPress
# Desktop: index.html or index-https.html
set $domain_without_port $server_name;
if ($server_name ~* "^(.+):") {
    set $domain_without_port $1;
}
set $gz_cache_end "/cugz_gzip_cache/$domain_without_port/$request_uri/index$gz_cache_https_prefix.html$gz_cache_encryption";
set $gz_cache_url "/wp-content$gz_cache_end";
set $gz_cache_file "$document_root/wp-content$gz_cache_end";

# Do not bypass if it's a POST request
if ($request_method = POST) {
    set $gz_cache_bypass 0;
    set $gz_cache_reason "POST request";
}

# Do not bypass if arguments are found (e.g. ?page=2)
if ($is_args) {
    set $gz_cache_bypass 0;
    set $gz_cache_reason "Arguments found";
}

# Do not bypass if the site is in maintenance mode
if (-f "$document_root/.maintenance") {
    set $gz_cache_bypass 0;
    set $gz_cache_reason "Maintenance mode";
}

# Do not bypass if one of those cookie if found
# wordpress_logged_in_[hash] : When a user is logged in, this cookie is created (we'd rather let the cache handle that)
# wp-postpass_[hash] : When a protected post requires a password, this cookie is created.
if ($http_cookie ~* "(wordpress_logged_in_|wp\-postpass_|woocommerce_items_in_cart|woocommerce_cart_hash|wptouch_switch_toogle|comment_author_|comment_author_email_)") {
    set $gz_cache_bypass 0;
    set $gz_cache_reason "Cookie";
}

# Do not bypass if the cached file does not exist
if (!-f "$gz_cache_file") {
    set $gz_cache_bypass 0;
    set $gz_cache_reason "File not cached";
}

# If the bypass token is still on, let's bypass WordPress with the cached URL
if ($gz_cache_bypass = 1) {
    set $serving_static "Yes";
    set $gz_cache_reason "$gz_cache_url";
}

# Clear variables if debug is not needed
if ($gz_cache_debug = 0) {
    set $gz_cache_reason "";
    set $gz_cache_file "";
}

# If the bypass token is still on, rewrite according to the file linked to the request
if ($gz_cache_bypass = 1) {
    rewrite .* "$gz_cache_url" last;
}

# Add header to HTML cached files
location ~ /wp-content/cugz_gzip_cache/.*html$ {
    etag on;
    add_header Vary "Accept-Encoding, Cookie";
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header X-Cache-Serving-Static $serving_static;
    add_header X-Cache-Reason $gz_cache_reason;
    add_header X-Cache-File $gz_cache_file;
    add_header Strict-Transport-Security "$gz_cache_hsts_value";
    add_header X-Frame-Options SAMEORIGIN;
	add_header X-DNS-Prefetch-Control On;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header Referrer-Policy origin always;
	add_header Feature-Policy "geolocation 'self';midi 'none';sync-xhr 'self';microphone 'none';camera 'none';magnetometer 'none';gyroscope 'none';fullscreen 'self';payment 'none';";
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Max-Age 86400;
}

# Do not gzip cached files that are already gzipped
location ~ /wp-content/cugz_gzip_cache/.*_gz$ {
    etag on;
    gzip off;
    types {}
    default_type text/html;
    add_header Content-Encoding gzip;
    add_header Vary "Accept-Encoding, Cookie";
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header X-Cache-Serving-Static $serving_static;
    add_header X-Cache-Reason $gz_cache_reason;
    add_header X-Cache-File $gz_cache_file;
    add_header Strict-Transport-Security "$gz_cache_hsts_value";
    add_header X-Frame-Options SAMEORIGIN;
	add_header X-DNS-Prefetch-Control On;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header Referrer-Policy origin always;
	add_header Feature-Policy "geolocation 'self';midi 'none';sync-xhr 'self';microphone 'none';camera 'none';magnetometer 'none';gyroscope 'none';fullscreen 'self';payment 'none';";
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Max-Age 86400;
}

###################################################################################################
# Debug header (when file is not cached)
#
add_header X-Cache-Serving-Static $serving_static;
add_header X-Cache-Reason $gz_cache_reason;
add_header X-Cache-File $gz_cache_file;

###################################################################################################
# BROWSER CSS/JS CACHE
#
location ~* \.(css|js)$ {
    etag on;
    gzip_vary on;
    expires 365d;
    log_not_found off;
}

###################################################################################################
# BROWSER MEDIA CACHE
#
location ~* \.(ico|gif|jpe?g|png|svg|eot|otf|woff|woff2|ttf|ogg|webmanifest)$ {
    etag on;
    expires 365d;
    log_not_found off;
}

###################################################################################################
# Deny direct access to certain wordpress files/directories, then use index.php for all else
#
location / {
    location ~* (.*\.ini|.*\.log|license\.txt|readme\.html|nginx\.conf|\.|(wp-activate|wp-config|wp-config-sample)\.php|wp-includes/.*\.php|(?:uploads|files|wc-logs)/.*\.php)$ {
        return 404;
    }
    location ~* /wp-content/uploads/woocommerce_uploads/ {
        if ( $upstream_http_x_accel_redirect = "" ) {
            return 403;
        }
        internal;
    }
    try_files $uri $uri/ /index.php?$args;
}
